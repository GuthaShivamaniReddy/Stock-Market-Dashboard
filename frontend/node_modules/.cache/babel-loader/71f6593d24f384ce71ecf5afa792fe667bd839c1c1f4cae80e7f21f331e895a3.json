{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\OneDrive\\\\Desktop\\\\jarnox\\\\frontend\\\\src\\\\components\\\\StockInfo.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockInfo = ({\n  stockData\n}) => {\n  if (!stockData || stockData.length === 0) {\n    return null;\n  }\n\n  // Sort data by date to get latest and earliest data\n  const sortedData = [...stockData].sort((a, b) => new Date(a.date) - new Date(b.date));\n  const latestData = sortedData[sortedData.length - 1];\n  const earliestData = sortedData[0];\n\n  // Calculate metrics\n  const currentPrice = latestData.close_price;\n  const previousPrice = earliestData.close_price;\n  const priceChange = currentPrice - previousPrice;\n  const priceChangePercent = (priceChange / previousPrice * 100).toFixed(2);\n  const isPositive = priceChange >= 0;\n\n  // Calculate 30-day high and low\n  const highPrices = sortedData.map(item => item.high_price);\n  const lowPrices = sortedData.map(item => item.low_price);\n  const thirtyDayHigh = Math.max(...highPrices);\n  const thirtyDayLow = Math.min(...lowPrices);\n\n  // Calculate average volume\n  const volumes = sortedData.map(item => item.volume);\n  const averageVolume = Math.round(volumes.reduce((sum, vol) => sum + vol, 0) / volumes.length);\n\n  // Calculate volatility (standard deviation of returns)\n  const returns = sortedData.slice(1).map((item, index) => {\n    const prevPrice = sortedData[index].close_price;\n    return (item.close_price - prevPrice) / prevPrice * 100;\n  });\n  const meanReturn = returns.reduce((sum, ret) => sum + ret, 0) / returns.length;\n  const variance = returns.reduce((sum, ret) => sum + Math.pow(ret - meanReturn, 2), 0) / returns.length;\n  const volatility = Math.sqrt(variance).toFixed(2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stock-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-label\",\n        children: \"Current Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-value\",\n        children: [\"$\", currentPrice.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-label\",\n        children: \"30-Day Change\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `info-value ${isPositive ? 'positive' : 'negative'}`,\n        children: [isPositive ? '+' : '', priceChange.toFixed(2), \" (\", isPositive ? '+' : '', priceChangePercent, \"%)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-label\",\n        children: \"30-Day High\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-value\",\n        children: [\"$\", thirtyDayHigh.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-label\",\n        children: \"30-Day Low\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-value\",\n        children: [\"$\", thirtyDayLow.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-label\",\n        children: \"Avg Volume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-value\",\n        children: new Intl.NumberFormat().format(averageVolume)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-label\",\n        children: \"Volatility\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-value\",\n        children: [volatility, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = StockInfo;\nexport default StockInfo;\nvar _c;\n$RefreshReg$(_c, \"StockInfo\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","StockInfo","stockData","length","sortedData","sort","a","b","Date","date","latestData","earliestData","currentPrice","close_price","previousPrice","priceChange","priceChangePercent","toFixed","isPositive","highPrices","map","item","high_price","lowPrices","low_price","thirtyDayHigh","Math","max","thirtyDayLow","min","volumes","volume","averageVolume","round","reduce","sum","vol","returns","slice","index","prevPrice","meanReturn","ret","variance","pow","volatility","sqrt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Intl","NumberFormat","format","_c","$RefreshReg$"],"sources":["C:/Users/shiva/OneDrive/Desktop/jarnox/frontend/src/components/StockInfo.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst StockInfo = ({ stockData }) => {\r\n  if (!stockData || stockData.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  // Sort data by date to get latest and earliest data\r\n  const sortedData = [...stockData].sort((a, b) => new Date(a.date) - new Date(b.date));\r\n  const latestData = sortedData[sortedData.length - 1];\r\n  const earliestData = sortedData[0];\r\n\r\n  // Calculate metrics\r\n  const currentPrice = latestData.close_price;\r\n  const previousPrice = earliestData.close_price;\r\n  const priceChange = currentPrice - previousPrice;\r\n  const priceChangePercent = ((priceChange / previousPrice) * 100).toFixed(2);\r\n  const isPositive = priceChange >= 0;\r\n\r\n  // Calculate 30-day high and low\r\n  const highPrices = sortedData.map(item => item.high_price);\r\n  const lowPrices = sortedData.map(item => item.low_price);\r\n  const thirtyDayHigh = Math.max(...highPrices);\r\n  const thirtyDayLow = Math.min(...lowPrices);\r\n\r\n  // Calculate average volume\r\n  const volumes = sortedData.map(item => item.volume);\r\n  const averageVolume = Math.round(volumes.reduce((sum, vol) => sum + vol, 0) / volumes.length);\r\n\r\n  // Calculate volatility (standard deviation of returns)\r\n  const returns = sortedData.slice(1).map((item, index) => {\r\n    const prevPrice = sortedData[index].close_price;\r\n    return ((item.close_price - prevPrice) / prevPrice) * 100;\r\n  });\r\n  const meanReturn = returns.reduce((sum, ret) => sum + ret, 0) / returns.length;\r\n  const variance = returns.reduce((sum, ret) => sum + Math.pow(ret - meanReturn, 2), 0) / returns.length;\r\n  const volatility = Math.sqrt(variance).toFixed(2);\r\n\r\n  return (\r\n    <div className=\"stock-info\">\r\n      <div className=\"info-card\">\r\n        <div className=\"info-label\">Current Price</div>\r\n        <div className=\"info-value\">\r\n          ${currentPrice.toFixed(2)}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"info-card\">\r\n        <div className=\"info-label\">30-Day Change</div>\r\n        <div className={`info-value ${isPositive ? 'positive' : 'negative'}`}>\r\n          {isPositive ? '+' : ''}{priceChange.toFixed(2)} ({isPositive ? '+' : ''}{priceChangePercent}%)\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"info-card\">\r\n        <div className=\"info-label\">30-Day High</div>\r\n        <div className=\"info-value\">\r\n          ${thirtyDayHigh.toFixed(2)}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"info-card\">\r\n        <div className=\"info-label\">30-Day Low</div>\r\n        <div className=\"info-value\">\r\n          ${thirtyDayLow.toFixed(2)}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"info-card\">\r\n        <div className=\"info-label\">Avg Volume</div>\r\n        <div className=\"info-value\">\r\n          {new Intl.NumberFormat().format(averageVolume)}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"info-card\">\r\n        <div className=\"info-label\">Volatility</div>\r\n        <div className=\"info-value\">\r\n          {volatility}%\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockInfo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}