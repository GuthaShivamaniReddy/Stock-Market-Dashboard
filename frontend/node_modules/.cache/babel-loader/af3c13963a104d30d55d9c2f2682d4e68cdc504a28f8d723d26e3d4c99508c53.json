{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\OneDrive\\\\Desktop\\\\jarnox\\\\frontend\\\\src\\\\components\\\\StockChart.js\";\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, BarElement } from 'chart.js';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\nconst StockChart = ({\n  stockData,\n  company\n}) => {\n  if (!stockData || stockData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-selection\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No stock data available for \", company.symbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Sort data by date\n  const sortedData = [...stockData].sort((a, b) => new Date(a.date) - new Date(b.date));\n  const chartData = {\n    labels: sortedData.map(item => new Date(item.date).toLocaleDateString()),\n    datasets: [{\n      label: 'Close Price',\n      data: sortedData.map(item => item.close_price),\n      borderColor: 'rgb(75, 192, 192)',\n      backgroundColor: 'rgba(75, 192, 192, 0.5)',\n      tension: 0.1,\n      pointRadius: 3,\n      pointHoverRadius: 6\n    }, {\n      label: 'High Price',\n      data: sortedData.map(item => item.high_price),\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.1)',\n      tension: 0.1,\n      pointRadius: 2,\n      pointHoverRadius: 4\n    }, {\n      label: 'Low Price',\n      data: sortedData.map(item => item.low_price),\n      borderColor: 'rgb(54, 162, 235)',\n      backgroundColor: 'rgba(54, 162, 235, 0.1)',\n      tension: 0.1,\n      pointRadius: 2,\n      pointHoverRadius: 4\n    }]\n  };\n  const volumeData = {\n    labels: sortedData.map(item => new Date(item.date).toLocaleDateString()),\n    datasets: [{\n      label: 'Volume',\n      data: sortedData.map(item => item.volume),\n      backgroundColor: 'rgba(153, 102, 255, 0.6)',\n      borderColor: 'rgb(153, 102, 255)',\n      borderWidth: 1\n    }]\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: `${company.symbol} Stock Price Chart`\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function (context) {\n            let label = context.dataset.label || '';\n            if (label) {\n              label += ': ';\n            }\n            if (context.parsed.y !== null) {\n              if (label.includes('Volume')) {\n                label += new Intl.NumberFormat().format(context.parsed.y);\n              } else {\n                label += new Intl.NumberFormat('en-US', {\n                  style: 'currency',\n                  currency: 'USD'\n                }).format(context.parsed.y);\n              }\n            }\n            return label;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Price ($)'\n        }\n      }\n    },\n    interaction: {\n      mode: 'nearest',\n      axis: 'x',\n      intersect: false\n    }\n  };\n  const volumeOptions = {\n    ...options,\n    plugins: {\n      ...options.plugins,\n      title: {\n        display: true,\n        text: `${company.symbol} Trading Volume`\n      }\n    },\n    scales: {\n      ...options.scales,\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Volume'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: '2',\n        minHeight: '300px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: '1',\n        minHeight: '150px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: volumeData,\n        options: volumeOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_c = StockChart;\nexport default StockChart;\nvar _c;\n$RefreshReg$(_c, \"StockChart\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","BarElement","Line","Bar","jsxDEV","_jsxDEV","register","StockChart","stockData","company","length","className","children","symbol","fileName","_jsxFileName","lineNumber","columnNumber","sortedData","sort","a","b","Date","date","chartData","labels","map","item","toLocaleDateString","datasets","label","data","close_price","borderColor","backgroundColor","tension","pointRadius","pointHoverRadius","high_price","low_price","volumeData","volume","borderWidth","options","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","tooltip","mode","intersect","callbacks","context","dataset","parsed","y","includes","Intl","NumberFormat","format","style","currency","scales","x","interaction","axis","volumeOptions","height","flexDirection","gap","flex","minHeight","_c","$RefreshReg$"],"sources":["C:/Users/shiva/OneDrive/Desktop/jarnox/frontend/src/components/StockChart.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  BarElement,\r\n} from 'chart.js';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst StockChart = ({ stockData, company }) => {\r\n  if (!stockData || stockData.length === 0) {\r\n    return (\r\n      <div className=\"no-selection\">\r\n        <p>No stock data available for {company.symbol}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Sort data by date\r\n  const sortedData = [...stockData].sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n  const chartData = {\r\n    labels: sortedData.map(item => new Date(item.date).toLocaleDateString()),\r\n    datasets: [\r\n      {\r\n        label: 'Close Price',\r\n        data: sortedData.map(item => item.close_price),\r\n        borderColor: 'rgb(75, 192, 192)',\r\n        backgroundColor: 'rgba(75, 192, 192, 0.5)',\r\n        tension: 0.1,\r\n        pointRadius: 3,\r\n        pointHoverRadius: 6,\r\n      },\r\n      {\r\n        label: 'High Price',\r\n        data: sortedData.map(item => item.high_price),\r\n        borderColor: 'rgb(255, 99, 132)',\r\n        backgroundColor: 'rgba(255, 99, 132, 0.1)',\r\n        tension: 0.1,\r\n        pointRadius: 2,\r\n        pointHoverRadius: 4,\r\n      },\r\n      {\r\n        label: 'Low Price',\r\n        data: sortedData.map(item => item.low_price),\r\n        borderColor: 'rgb(54, 162, 235)',\r\n        backgroundColor: 'rgba(54, 162, 235, 0.1)',\r\n        tension: 0.1,\r\n        pointRadius: 2,\r\n        pointHoverRadius: 4,\r\n      }\r\n    ]\r\n  };\r\n\r\n  const volumeData = {\r\n    labels: sortedData.map(item => new Date(item.date).toLocaleDateString()),\r\n    datasets: [\r\n      {\r\n        label: 'Volume',\r\n        data: sortedData.map(item => item.volume),\r\n        backgroundColor: 'rgba(153, 102, 255, 0.6)',\r\n        borderColor: 'rgb(153, 102, 255)',\r\n        borderWidth: 1,\r\n      }\r\n    ]\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: `${company.symbol} Stock Price Chart`,\r\n      },\r\n      tooltip: {\r\n        mode: 'index',\r\n        intersect: false,\r\n        callbacks: {\r\n          label: function(context) {\r\n            let label = context.dataset.label || '';\r\n            if (label) {\r\n              label += ': ';\r\n            }\r\n            if (context.parsed.y !== null) {\r\n              if (label.includes('Volume')) {\r\n                label += new Intl.NumberFormat().format(context.parsed.y);\r\n              } else {\r\n                label += new Intl.NumberFormat('en-US', {\r\n                  style: 'currency',\r\n                  currency: 'USD'\r\n                }).format(context.parsed.y);\r\n              }\r\n            }\r\n            return label;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    scales: {\r\n      x: {\r\n        display: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Date'\r\n        }\r\n      },\r\n      y: {\r\n        display: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Price ($)'\r\n        }\r\n      }\r\n    },\r\n    interaction: {\r\n      mode: 'nearest',\r\n      axis: 'x',\r\n      intersect: false\r\n    }\r\n  };\r\n\r\n  const volumeOptions = {\r\n    ...options,\r\n    plugins: {\r\n      ...options.plugins,\r\n      title: {\r\n        display: true,\r\n        text: `${company.symbol} Trading Volume`,\r\n      }\r\n    },\r\n    scales: {\r\n      ...options.scales,\r\n      y: {\r\n        display: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Volume'\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: '100%', display: 'flex', flexDirection: 'column', gap: '20px' }}>\r\n      <div style={{ flex: '2', minHeight: '300px' }}>\r\n        <Line data={chartData} options={options} />\r\n      </div>\r\n      <div style={{ flex: '1', minHeight: '150px' }}>\r\n        <Bar data={volumeData} options={volumeOptions} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}